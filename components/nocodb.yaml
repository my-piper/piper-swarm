---

volumes:
  postgres-data:
  nocodb-data:

services:
  postgres:
    image: postgres:16
    networks:
      - database
    env_file:
      - ../config/postgres.env
    environment:
      - POSTGRES_HOST_AUTH_METHOD=md5
      - POSTGRES_INITDB_ARGS=--auth-host=md5
    command: ["postgres", "-c", "password_encryption=md5"]
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      placement:
        constraints:
          -  "node.role==manager"
      restart_policy:
        condition: on-failure

  nocodb:
    image: nocodb/nocodb:latest
    networks:
      - database
      - ingress
      - seaweedfs
    env_file:
      - ../config/nocodb.env
    volumes:
      - nocodb-data:/usr/app/data
    deploy:
      placement:
        constraints:
          -  "node.role==manager"
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nocodb.entrypoints=http"
        - "traefik.http.routers.nocodb.rule=Host(`${DOMAIN}`) && PathPrefix(`/nocodb/`)"
        - "traefik.http.routers.nocodb.middlewares=piper-nocodb-strip"
        - "traefik.http.middlewares.piper-nocodb-strip.stripprefix.prefixes=/nocodb"
        - "traefik.http.services.nocodb.loadbalancer.server.port=8080"
        - "traefik.docker.network=piper_ingress"
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
